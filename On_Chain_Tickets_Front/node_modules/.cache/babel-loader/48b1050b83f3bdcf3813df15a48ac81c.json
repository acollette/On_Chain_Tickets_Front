{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrecollette/Documents/Solidity/TrueLabs/On_Chain_Tickets_Front/src/Components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  connect_address: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  buttonColor: {\n    backgroundColor: \"#fdd835\",\n    color: \"#7c4dff\",\n    fontFamily: ['Fascinate', 'cursive']\n  }\n}));\n\nconst Header = () => {\n  _s();\n\n  const classes = useStyles();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const isConnected = walletAddress !== \"\";\n\n  async function requestAccount() {\n    console.log('Requesting Account');\n\n    if (window.ethereum) {\n      console.log(\"detected\");\n\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAddress(accounts[0]);\n      } catch (error) {\n        console.log('Error Connecting');\n      }\n    } else {\n      alert('MetaMask not detected');\n    }\n  } //create provider to interact with a smart contract\n\n\n  async function connectWallet() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.connect_address,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            className: classes.buttonColor,\n            onClick: () => setWalletAddress(\"\"),\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          className: classes.buttonColor,\n          onClick: () => requestAccount(),\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.connect_address,\n      children: isConnected ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current address: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"yPP4foFsBPUC/EqVg7sAIcXFAhs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/alexandrecollette/Documents/Solidity/TrueLabs/On_Chain_Tickets_Front/src/Components/Header.js"],"names":["React","useState","ethers","Button","makeStyles","useStyles","theme","connect_address","display","justifyContent","buttonColor","backgroundColor","color","fontFamily","Header","classes","walletAddress","setWalletAddress","isConnected","requestAccount","console","log","window","ethereum","accounts","request","method","error","alert","connectWallet","provider","providers","Web3Provider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,OAAO,cAAP;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,eAAe,EAAG;AACdC,IAAAA,OAAO,EAAC,MADM;AAEdC,IAAAA,cAAc,EAAE;AAFF,GADmB;AAKrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,KAAK,EAAC,SAFG;AAGTC,IAAAA,UAAU,EAAC,CAAC,WAAD,EAAc,SAAd;AAHF;AALwB,CAAZ,CAAD,CAA5B;;AAeA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMiB,WAAW,GAAGF,aAAa,KAAK,EAAtC;;AAEA,iBAAeG,cAAf,GAAgC;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,QAAGC,MAAM,CAACC,QAAV,EAAmB;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,UAAI;AACA,cAAMG,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC3CC,UAAAA,MAAM,EAAE;AADmC,SAAxB,CAAvB;AAGAT,QAAAA,gBAAgB,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAhB;AACH,OALD,CAKE,OAAOG,KAAP,EAAc;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AAEJ,KAXD,MAYI;AACAO,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;AACJ,GAxBgB,CA0BjB;;;AAEA,iBAAeC,aAAf,GAA8B;AAC1B,QAAG,OAAOP,MAAM,CAACC,QAAd,KAA2B,WAA9B,EAA0C;AACtC,YAAMJ,cAAc,EAApB;AAEA,YAAMW,QAAQ,GAAG,IAAI5B,MAAM,CAAC6B,SAAP,CAAiBC,YAArB,CAAkCV,MAAM,CAACC,QAAzC,CAAjB;AACH;AACJ;;AAGD,sBACG;AAAA,4BACC;AAAK,MAAA,SAAS,EAAER,OAAO,CAACR,eAAxB;AAAA,6BACI;AAAA,kBACKW,WAAW,gBACZ;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,SAAS,EAAEH,OAAO,CAACL,WAAxC;AAAqD,YAAA,OAAO,EAAE,MAAKO,gBAAgB,CAAC,EAAD,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADY,gBAOZ,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,SAAS,EAAEF,OAAO,CAACL,WAAxC;AAAqD,UAAA,OAAO,EAAE,MAAMS,cAAc,EAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADD,eAgBC;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACR,eAAxB;AAAA,gBACIW,WAAW,gBACR;AAAA,wCAAqBF,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAEP;AAHR;AAAA;AAAA;AAAA;AAAA,YAhBD;AAAA,kBADH;AA0BH,CA/DD;;GAAMF,M;UAEcT,S;;;KAFdS,M;AAkEN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport {ethers} from 'ethers'\nimport {Button, makeStyles} from \"@material-ui/core\"\nimport '../index.css'\n\nconst useStyles = makeStyles((theme) => ({\n    connect_address : {\n        display:\"flex\",\n        justifyContent: \"flex-end\",\n    },\n    buttonColor: {\n        backgroundColor: \"#fdd835\",\n        color:\"#7c4dff\",\n        fontFamily:['Fascinate', 'cursive'],\n\n    },\n}))\n\n\n\nconst Header = () => {\n\n    const classes = useStyles()\n    const [walletAddress, setWalletAddress] = useState(\"\")\n    const isConnected = walletAddress !== \"\"\n    \n    async function requestAccount() {\n        console.log('Requesting Account')\n\n        if(window.ethereum){\n            console.log(\"detected\")\n            try {\n                const accounts = await window.ethereum.request({\n                    method: \"eth_requestAccounts\",\n                })\n                setWalletAddress(accounts[0])\n            } catch (error) {\n                console.log('Error Connecting')\n            }\n\n        }\n        else{\n            alert('MetaMask not detected')\n        }\n    }\n\n    //create provider to interact with a smart contract\n\n    async function connectWallet(){\n        if(typeof window.ethereum !== 'undefined'){\n            await requestAccount();\n\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n        }\n    }\n\n\n    return(\n       <>   \n        <div className={classes.connect_address}>\n            <div>\n                {isConnected ? (\n                <div>\n                    <Button size=\"large\" className={classes.buttonColor} onClick={()=> setWalletAddress(\"\")}>\n                        Disconnect\n                    </Button>\n                </div>    \n                ) : (\n                <Button size=\"large\" className={classes.buttonColor} onClick={() => requestAccount()}>\n                    Connect\n                </Button>\n                )}\n            </div>\n        </div> \n        <div className={classes.connect_address}>\n           {isConnected ? (\n               <p>Current address: {walletAddress}</p>):\n               (\"\")} \n        </div> \n       </>    \n    )   \n    \n\n}\n\n\nexport default Header"]},"metadata":{},"sourceType":"module"}